name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Generate assets
        run: go generate internal/assets/assets.go

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Download test APK for integration tests
        run: |
          mkdir -p testdata
          wget -q https://github.com/appium/android-apidemos/releases/download/v3.1.0/selendroid-test-app-0.17.0.apk -O testdata/sample.apk

      - name: Run integration tests
        run: go test -v -tags=integration ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Generate assets
        run: go generate internal/assets/assets.go

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Generate assets
        run: go generate internal/assets/assets.go

      - name: Build
        run: |
          mkdir -p build
          go build -o build/apkext .

      - name: Test binary
        run: ./build/apkext --version && ./build/apkext --help